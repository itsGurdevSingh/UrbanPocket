createCategory:
  post:
    tags: [Categories]
    summary: Create a new category
    description: Requires admin role.
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/category.yaml#/CreateCategoryRequest"
    responses:
      "201":
        description: Category created successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "401": { $ref: "../schemas/common.yaml#/responses/Unauthorized" }
      "403": { $ref: "../schemas/common.yaml#/responses/Forbidden" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }

categoryById:
  get:
    tags: [Categories]
    summary: Get a category by ID
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    responses:
      "200":
        description: Category fetched successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }
  put:
    tags: [Categories]
    summary: Update a category by ID
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/category.yaml#/UpdateCategoryRequest"
    responses:
      "200":
        description: Category updated successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "401": { $ref: "../schemas/common.yaml#/responses/Unauthorized" }
      "403": { $ref: "../schemas/common.yaml#/responses/Forbidden" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }
  delete:
    tags: [Categories]
    summary: Permanently delete a category by ID
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    responses:
      "200":
        description: Category deleted successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/MessageResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "401": { $ref: "../schemas/common.yaml#/responses/Unauthorized" }
      "403": { $ref: "../schemas/common.yaml#/responses/Forbidden" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }

enableCategory:
  patch:
    tags: [Categories]
    summary: Enable a category
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    responses:
      "200":
        description: Category enabled successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "401": { $ref: "../schemas/common.yaml#/responses/Unauthorized" }
      "403": { $ref: "../schemas/common.yaml#/responses/Forbidden" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }

disableCategory:
  patch:
    tags: [Categories]
    summary: Disable a category
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    responses:
      "200":
        description: Category disabled successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "401": { $ref: "../schemas/common.yaml#/responses/Unauthorized" }
      "403": { $ref: "../schemas/common.yaml#/responses/Forbidden" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }

getAllCategories:
  get:
    tags: [Categories]
    summary: Get all categories (with optional pagination)
    parameters:
      - name: page
        in: query
        required: false
        schema: { type: integer, minimum: 1, example: 1 }
      - name: limit
        in: query
        required: false
        schema: { type: integer, minimum: 1, maximum: 100, example: 20 }
      - name: isActive
        in: query
        required: false
        schema: { type: boolean }
      - name: parentCategory
        in: query
        required: false
        schema: { type: string, format: objectid }
      - name: q
        in: query
        required: false
        description: Free-text search by name/description
        schema: { type: string }
    responses:
      "200":
        description: Categories retrieved successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoriesListResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }

getCategoryTree:
  get:
    tags: [Categories]
    summary: Get a category subtree by ID (category and its descendants)
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string, format: objectid }
    responses:
      "200":
        description: Category tree fetched successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/common.yaml#/CategoryResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "404": { $ref: "../schemas/common.yaml#/responses/NotFound" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }
