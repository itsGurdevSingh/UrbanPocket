search:
  get:
    tags: [Storefront]
    summary: Search products for storefront
    description: >
      Public search endpoint combining products, variants, and inventory.
      Supports text search, category/brand/seller filters, dynamic variant option filters, price ranges, sorting, and pagination.
    parameters:
      - name: search
        in: query
        required: false
        description: Free-text query matched against product name, brand, and description.
        schema: { type: string, minLength: 1, maxLength: 100 }
      - name: category
        in: query
        required: false
        description: Comma-separated list of category IDs (ObjectIds).
        schema: { type: string }
      - name: brand
        in: query
        required: false
        description: Comma-separated list of brands.
        schema: { type: string }
      - name: sellerId
        in: query
        required: false
        description: Filter by seller ID (ObjectId).
        schema: { type: string, format: objectid }
      - name: minPrice
        in: query
        required: false
        schema: { type: number, minimum: 0 }
      - name: maxPrice
        in: query
        required: false
        schema: { type: number, minimum: 0 }
      - name: minRating
        in: query
        required: false
        schema: { type: number, minimum: 0, maximum: 5 }
      - name: sortBy
        in: query
        required: false
        description: Sort field. When search present, relevance uses text score.
        schema:
          type: string
          enum: [relevance, price, createdAt]
          default: relevance
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum: [asc, desc]
          default: desc
      - name: page
        in: query
        required: false
        schema: { type: integer, minimum: 1, default: 1 }
      - name: limit
        in: query
        required: false
        schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      - name: option_*
        in: query
        required: false
        description: "Dynamic variant option filters. Example: option_Size=M&option_Color=Black"
        schema: { type: string }
    responses:
      "200":
        description: Search completed successfully.
        content:
          application/json:
            schema:
              $ref: "../schemas/storefront.yaml#/StorefrontSearchResponse"
      "400": { $ref: "../schemas/common.yaml#/responses/InvalidRequest" }
      "500": { $ref: "../schemas/common.yaml#/responses/InternalServerError" }
